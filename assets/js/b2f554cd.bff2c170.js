"use strict";(self.webpackChunkneohaskell_github_io=self.webpackChunkneohaskell_github_io||[]).push([[477],{10:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"/0000-index","metadata":{"permalink":"/blog/0000-index","editUrl":"https://github.com/neohaskell/nhep/edit/main/nhep/0000-index/index.mdx","source":"@site/blog/nhep/nhep/0000-index/index.mdx","title":"NHEP 0 - Index of NeoHaskell Evolution Proposals","description":"This NHEP will contain the index of all NeoHaskell Enhancement Proposals, known as NHEPs. NHEP numbers are assigned by the NHEP editors, and once assigned are never changed. The Git history of the NHEP texts represent their historical record.","date":"2023-09-26T00:00:00.000Z","formattedDate":"September 26, 2023","tags":[],"readingTime":0.38,"hasTruncateMarker":false,"authors":[{"name":"Nick Tchayka","title":"Creator of NeoHaskell","url":"https://github.com/NickSeagull","imageURL":"https://github.com/NickSeagull.png","key":"nick"}],"frontMatter":{"title":"NHEP 0 - Index of NeoHaskell Evolution Proposals","authors":["nick"],"date":"2023-09-26T00:00"},"nextItem":{"title":"NHEP 1 - Purpose and Guidelines","permalink":"/blog/0001-purpose-and-guidelines"}},"content":":::caution STATUS - DRAFT\\n:::\\n\\nThis NHEP will contain the index of all **NeoHaskell Enhancement Proposals**, known as NHEPs. NHEP numbers are assigned by the NHEP editors, and once assigned are never changed. The [Git history](https://github.com/neohaskell/NHEP) of the NHEP texts represent their historical record.\\n\\nIn the future, the NHEPs will be listed here by category. For now, use the sidebar on the left.\\n\\nA good starting point is [NHEP 1](./0001-purpose-and-guidelines), which describes the NHEP process itself."},{"id":"/0001-purpose-and-guidelines","metadata":{"permalink":"/blog/0001-purpose-and-guidelines","editUrl":"https://github.com/neohaskell/nhep/edit/main/nhep/0001-purpose-and-guidelines/index.mdx","source":"@site/blog/nhep/nhep/0001-purpose-and-guidelines/index.mdx","title":"NHEP 1 - Purpose and Guidelines","description":"What is a NHEP?","date":"2023-09-26T00:01:00.000Z","formattedDate":"September 26, 2023","tags":[],"readingTime":1.91,"hasTruncateMarker":false,"authors":[{"name":"Nick Tchayka","title":"Creator of NeoHaskell","url":"https://github.com/NickSeagull","imageURL":"https://github.com/NickSeagull.png","key":"nick"}],"frontMatter":{"title":"NHEP 1 - Purpose and Guidelines","authors":["nick"],"date":"2023-09-26T00:01"},"prevItem":{"title":"NHEP 0 - Index of NeoHaskell Evolution Proposals","permalink":"/blog/0000-index"}},"content":":::caution STATUS - DRAFT\\n:::\\n\\n## What is a NHEP?\\n\\nNHEP stands for NeoHaskell Evolution Proposal. It is a document that describes a change or addition to NeoHaskell.\\n\\n## Statuses of a NHEP\\n\\nA NHEP can have one of the following statuses:\\n\\n:::caution STATUS - DRAFT\\nThis status indicates that the NHEP is still being written and is not ready for review.\\n:::\\n\\n:::info STATUS - IN PROGRESS\\nThis status indicates that the NHEP has been accepted but is still being implemented.\\n:::\\n\\n:::tip STATUS - INTEGRATED\\nThis status indicates that the NHEP has been implemented.\\n:::\\n\\n:::danger STATUS - REJECTED\\nThis status indicates that the NHEP has been rejected.\\n:::\\n\\n## How to contribute to the design process\\n\\nEveryone is welcome to propose, discuss, and review ideas to improve NeoHaskell in the `#proposals` channel of the Discord server.\\n\\nNote that the project is in a very early stage, and the contribution to the design process is not well defined.\\n\\nAs some general rules for now, take this into account before submitting a proposal:\\n\\n- No \\"what about if NeoHaskell does a 180 degree turn and instead does this completely unrelated thing?\\". These kinds of proposals are **seen as completely out of the scope of the NeoHaskell project and will be instantly dismissed.**\\n- **Use constructive criticism.** Instead of \\"remove this, I don\'t like it\\", take a moment to think and give actual reasons like \\"I believe that this function in the standard library is not clear enough, someone could understand this in a wrong way\\"\\n- Is the problem being addressed **impactful enough** to warrant a change to NeoHaskell?\\n- How does this impact the [**Principle of Least Astonishment**](https://en.wikipedia.org/wiki/Principle_of_least_astonishment) of the project?\\n- How does this impact the [**Principle of Developer Happiness**](https://www.forbes.com/sites/forbestechcouncil/2023/09/22/ensuring-developer-happiness-how-to-hang-on-to-software-engineers) of the project?\\n- How does this impact the [**Principle of Least Effort**](https://simplicable.com/design/principle-of-least-effort) of the project? Both externally for the users, and internally for the maintainers.\\n- Does this proposal fit well with the **feel and direction** of NeoHaskell?\\n- What **other libraries/languages** got you inspired for submitting this proposal? How does this compare to those?\\n- How much **effort** did you put into your review? A glance, a quick reading, or an in-depth study?\\n\\nPlease **state explicitly** whether you believe that the proposal should be accepted into NeoHaskell."}]}')}}]);